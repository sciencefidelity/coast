---
import { Maybe } from "astro-control"
import format from "date-fns/format"
import { toHTML } from "@portabletext/to-html"
import sanityClient from "lib/sanityClient"
import { portableTextComponents, toPlainText } from "lib/utils"
import BaseLayout from "layouts/BaseLayout.astro"
import Image from "components/Image.astro"
import { postsQuery } from "lib/queries"
import { Design, Navigation, Post, Settings } from "lib/interfaces"

export async function getStaticPaths() {
  const data: {
    design: Design
    navigation: Navigation
    posts: Post[]
    settings: Settings
  } = await sanityClient.fetch(postsQuery).then(response => response)
  const { design, navigation, settings } = data
  return data.posts.map(post => {
    return {
      params: { slug: post.slug },
      props: { design, navigation, post, settings }
    }
  })
}

// const { slug } = Astro.params
const { design, navigation, post, settings } = Astro.props as {
  design: Design
  navigation: Navigation
  post: Post
  settings: Settings
}
const accentColor = design.accentColor || "#0284C7"
---
<BaseLayout
  design={design}
  navigation={navigation}
  settings={settings}
>
  <article class="mx-4 md:mx-8 pt-8">
    <header class="container">
      <div class="max-w-3xl mx-auto">
        <section>
          <Maybe as="ul">
            {post.settings.tags && post.settings.tags.map(tag =>
              <li>
                <a
                  href={`/category/${tag.slug}`}
                  class="tag uppercase text-xs pt-6"
                >
                  {tag.title}
                </a>
              </li>
            )}
          </Maybe>
        </section>
        <Maybe as="h1"
          class="smooth font-bold text-2xl md:text-5xl leading-8 md:leading-12 pt-2"
        >
          {post.title}
        </Maybe>
        <Maybe as="p"
          class="smooth text-lg md:text-xl text-gray-500 leading-6 pt-2 md:pt-6"
        >
          {post.settings.excerpt}
        </Maybe>
        <div class="my-8 flex gap-3 text-sm smooth">
          <Maybe as="ul" class="flex">
            {post.settings.authors.map(author =>
              <li class="w-12">
                <Maybe
                  as="a"
                  href={`/authors/${author.slug}`}
                  class="author block"
                >
                  {author.image &&
                    <Image
                      className="rounded-full shadow-sm"
                      image={author.image}
                      width={92}
                      height={92}
                      lazy={true}
                    />
                  }
                </Maybe>
              </li>
            )}
          </Maybe>
          <div class="flex flex-col">
            <span>
              {post.settings.authors &&
                post.settings.authors.map((author, idx) => {
                  const len = post.settings.authors.length
                  return (
                    <a href={`/authors/${author.slug}`} class="font-bold">
                      {author.name + (idx === len - 1 ? "" : ", ")}
                    </a>
                  )
                })
              }
            </span>
            <span class="text-gray-500">
              <Maybe as="time"
                datetime={format(
                  new Date(post.settings.publishedAt), "yyyy-MM-dd"
                )}
              >
                {format(new Date(post.settings.publishedAt), "MMM do, yyyy")}
              </Maybe>
              <span class="bull">&bull;</span>
              {post.body &&
                Math.ceil(toPlainText(post.body).split(/\W+/).length / 250)
              }
              min read
            </span>
          </div>
        </div>
      </div>
      <figure>
        <Image
          className=""
          image={post.image}
          width={1200}
          height={729}
          lazy={true}
        />
      </figure>
    </header>
    <section class="max-w-3xl mx-auto mt-12">
      <Maybe
        as="div"
        class="smooth serif text-gray-700 text-md md:text-xl leading-6 md:leading-8"
        set:html={toHTML(post.body, {components: portableTextComponents})}
      >
      </Maybe>
    </section>
    <!-- {previous
      ? <p><a href={`/blog/${previous.slug}`}>Previous post</a></p>
      : <p>&nbsp;</p>}
    {next
      ? <p><a href={`/blog/${next.slug}`}>Next post</a></p>
      : <p>&nbsp;</p>} -->
  </article>
</BaseLayout>

<style lang="scss" define:vars={{ accentColor }}>
  li {
    display: inline;
    &:not(:last-child)::after {
      content: ', ';
    }
  }

  .tag {
    color: var(--accentColor); /* stylelint-disable-line custom-property-pattern */
  }
</style>
